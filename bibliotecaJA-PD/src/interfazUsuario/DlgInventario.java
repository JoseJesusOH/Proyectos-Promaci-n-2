/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;
import java.awt.Dimension;
import java.awt.Point;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import objetosNegocio.Libro;
import objetosNegocio.PublicacionED;
import objetosNegocio.Publicacion;
/**
 *
 * @author jvale
 */
public class DlgInventario extends javax.swing.JDialog {

    /**
     * Creates new form DlgInventario
     */
    public DlgInventario(java.awt.Frame parent,String title, boolean modal,PublicacionED publicacionED,DefaultComboBoxModel listaLibros,int operacion,StringBuffer respuesta) {
        super(parent, modal);
        this.publicacionED=publicacionED;
        this.listaLibros=listaLibros;
        this.operacion=operacion;
        this.respuesta=respuesta;
        initComponents();
        // Modifica el título del botón botonAceptar y establece si los
        // botones botonRestaurar y botonCancelar estarán habilitados.
        // Si la operación es agregar
        if(operacion == ConstantesGUI.AGREGAR)
            botonAceptar.setText("Guardar");
        // Si la operación es actualizar
        else if(operacion == ConstantesGUI.ACTUALIZAR)
            botonAceptar.setText("Actualizar");
        // Si la operación es eliminar
        else if(operacion == ConstantesGUI.ELIMINAR) 
        {
            botonAceptar.setText("Eliminar");
            botonRestaurar.setEnabled(false);
        }
        // Si la operación es desplegar
        else if(operacion == ConstantesGUI.DESPLEGAR) 
        {
            botonAceptar.setText("Continuar");
            botonRestaurar.setEnabled(false);
            botonCancelar.setEnabled(false);
        } 

        if((operacion == ConstantesGUI.ELIMINAR) ||
        (operacion == ConstantesGUI.ACTUALIZAR) ||
        (operacion == ConstantesGUI.DESPLEGAR)) 
        {
            // despliega el resto de los datos de la canción
            String existencia= String.valueOf(publicacionED.getExistencia());
            campoTextoCantidad.setText(existencia);
            cajaCombinadaLibros.setSelectedItem(publicacionED.getPublicacion());
        } 
 
        // Si la operación es de eliminar o desplegar
        if((operacion == ConstantesGUI.ELIMINAR) ||
        (operacion == ConstantesGUI.DESPLEGAR)) 
        {
            // hace los campos de texto de sólo lectura
            campoTextoCantidad.setEditable(false);  
            cajaCombinadaLibros.setEditable(false);
        }
        // Establece el valor por omisión para respuesta, por si se cierra el
        // cuadro de diálogo presionando el botón cerrar o el botón cancelar
        respuesta.append(ConstantesGUI.CANCELAR);
        // centra el cuadro de dialogo sobre la ventana de la aplicación
        centraCuadroDialogo(parent);

        // Muestra el cuadro de diálogo
        setVisible(true); 


    }
    /** 
        * Este método centra el cuadro de dialogo sobre la ventana de la 
        * aplicación. 
        * @param parent Ventana sobre la que aparecerá el cuadro de diálogo 
        */ 
        private void centraCuadroDialogo(java.awt.Frame parent) { 
        // Obtiene el tamaño y posición de la ventana de la aplicación 
        Dimension frameSize = parent.getSize(); 
        Point loc = parent.getLocation(); 
        // Obtiene el tamaño del cuadro de diálogo 
        Dimension dlgSize = getPreferredSize(); 

        // Centra el cuadro de diálogo sobre la ventana padre 
        setLocation( (frameSize.width - dlgSize.width) / 2 + loc.x, 
        (frameSize.height - dlgSize.height) / 2 + loc.y); 
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cajaCombinadaLibros = new javax.swing.JComboBox<>();
        campoTextoCantidad = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        botonRestaurar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Catalogo de libros:");

        jLabel2.setText("Cantidad de libros:");

        cajaCombinadaLibros.setModel(listaLibros);

        campoTextoCantidad.setColumns(10);
        campoTextoCantidad.setText("0");
        campoTextoCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTextoCantidadActionPerformed(evt);
            }
        });

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonRestaurar.setText("Restaurar");
        botonRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestaurarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cajaCombinadaLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(campoTextoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(botonRestaurar)
                        .addGap(70, 70, 70)
                        .addComponent(botonCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cajaCombinadaLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoTextoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonRestaurar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
     // Si la operación es Agregar o Actualizar
     if((operacion == ConstantesGUI.AGREGAR) ||
     (operacion == ConstantesGUI.ACTUALIZAR)) 
     {
        int iTest = Integer.parseInt(campoTextoCantidad.getText());
        publicacionED.setDisponibilidad(iTest);
        int iTest1 = Integer.parseInt(campoTextoCantidad.getText());
        publicacionED.setExistencia(iTest1);
        publicacionED.setPublicacion((Publicacion)cajaCombinadaLibros.getSelectedItem());
        // Borra el contenido de respuesta
        respuesta.delete(0, respuesta.length());
        // Establece que se presionó el botón botonAceptar
        respuesta.append(ConstantesGUI.ACEPTAR);
        // Destruye el cuadro de díalogo
        dispose();
     }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRestaurarActionPerformed
        // TODO add your handling code here:
        if(operacion == ConstantesGUI.AGREGAR) { 
         campoTextoCantidad.setText("");
        cajaCombinadaLibros.setSelectedIndex(0);     
        }
       
        if(operacion == ConstantesGUI.ACTUALIZAR) {
            String existencia= String.valueOf(publicacionED.getExistencia());
            campoTextoCantidad.setText(existencia);
            cajaCombinadaLibros.setSelectedItem(publicacionED.getPublicacion());
        }
    }//GEN-LAST:event_botonRestaurarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // Destruye el cuadro de díalogo
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void campoTextoCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTextoCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTextoCantidadActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonRestaurar;
    private javax.swing.JComboBox<String> cajaCombinadaLibros;
    private javax.swing.JTextField campoTextoCantidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
    private PublicacionED publicacionED; 
    private DefaultComboBoxModel listaLibros; 
    private int operacion; 
    private StringBuffer respuesta; 
}
