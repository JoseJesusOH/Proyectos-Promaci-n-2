/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;

import java.awt.Dimension;
import java.awt.Point;
import objetosServicios.Fecha;
import objetosServicios.Periodo;
import objetosNegocio.Libro;
import objetosNegocio.Prestamo;
import objetosNegocio.Publicacion;
import objetosNegocio.Usuario;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Point;
import static java.lang.String.valueOf;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import objetosServicios.*;

/**
 *
 * @author jvale
 */
public class DlgPeriodo extends javax.swing.JDialog {

    /**
     * Creates new form DlgPeriodo
     */
    public DlgPeriodo(java.awt.Frame parent, String title, boolean modal,Periodo periodo,int operacion, StringBuffer respuesta) {
 super(parent, title, modal);
 this.periodo = periodo;
 this.operacion = operacion;
 this.respuesta = respuesta;
        initComponents();
         centraCuadroDialogo(parent);
        // Modifica el título del botón botonAceptar y establece si los
 // botones botonRestaurar y botonCancelar estarán habilitados.
 // Si la operación es agregar
 if(operacion == ConstantesGUI.AGREGAR)
 botonAceptar.setText("Aceptar");
 // Si la operación es actualizar
 else if(operacion == ConstantesGUI.ACTUALIZAR)
 botonAceptar.setText("Actualizar");
 // Si la operación es eliminar
 else if(operacion == ConstantesGUI.ELIMINAR) {
 botonAceptar.setText("Eliminar");
 botonRestaurar.setEnabled(false);
 }
 // Si la operación es desplegar
 else if(operacion == ConstantesGUI.DESPLEGAR) {
 botonAceptar.setText("Continuar");
 botonRestaurar.setEnabled(false);
 botonCancelar.setEnabled(false);
 }
 
  // Si la operación es de actualizar, eliminar o desplegar,
 if((operacion == ConstantesGUI.ELIMINAR) ||
 (operacion == ConstantesGUI.ACTUALIZAR) ||
 (operacion == ConstantesGUI.DESPLEGAR)) {
 // despliega el resto de los datos de el libro
 campoTextoFechaDesde.setText(periodo.getDesde().toString());
 campoTextoFechaHasta.setText(periodo.getHasta().toString()); 
 }
  // Si la operación es de eliminar o desplegar
 if((operacion == ConstantesGUI.ELIMINAR) ||
 (operacion == ConstantesGUI.DESPLEGAR)) {
         campoTextoFechaDesde.setEditable(false);
         campoTextoFechaHasta.setEditable(false);
          // Establece el valor por omisión para respuesta, por si se cierra el
 // cuadro de diálogo presionando el botón cerrar o el botón cancelar
 respuesta.append(ConstantesGUI.CANCELAR);
 // centra el cuadro de dialogo sobre la ventana de la aplicación
    

 // Muestra el cuadro de diálogo
 }
 setVisible(true);

    }
         /** 
        * Este método centra el cuadro de dialogo sobre la ventana de la 
        * aplicación. 
        * @param parent Ventana sobre la que aparecerá el cuadro de diálogo 
        */ 
        private void centraCuadroDialogo(java.awt.Frame parent) { 
        // Obtiene el tamaño y posición de la ventana de la aplicación 
        Dimension frameSize = parent.getSize(); 
        Point loc = parent.getLocation(); 
        // Obtiene el tamaño del cuadro de diálogo 
        Dimension dlgSize = getPreferredSize(); 

        // Centra el cuadro de diálogo sobre la ventana padre 
        setLocation( (frameSize.width - dlgSize.width) / 2 + loc.x, 
        (frameSize.height - dlgSize.height) / 2 + loc.y); 
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoTextoFechaDesde = new javax.swing.JTextField();
        campoTextoFechaHasta = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        botonRestaurar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Fecha desde");

        jLabel2.setText("Fecha hasta");

        campoTextoFechaDesde.setColumns(10);

        campoTextoFechaHasta.setColumns(10);

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        botonRestaurar.setText("Restaurar");
        botonRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestaurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(botonRestaurar)
                        .addGap(77, 77, 77)
                        .addComponent(botonCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoTextoFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoTextoFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoTextoFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar)
                    .addComponent(botonRestaurar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        // TODO add your handling code here:
    if((operacion == ConstantesGUI.AGREGAR) ||
 (operacion == ConstantesGUI.ACTUALIZAR)) {
 // Toma los valores capturados en los campos de texto y en la caja
 // combinada y almacénalos en el parámetro cancion.
    int dia=Integer.parseInt(campoTextoFechaDesde.getText().substring(0,2));
    int mes=Integer.parseInt(campoTextoFechaDesde.getText().substring(3,5));
    int año=Integer.parseInt(campoTextoFechaDesde.getText().substring(6));
    Fecha fecha1=new Fecha(dia,mes,año);
    int dia2=Integer.parseInt(campoTextoFechaHasta.getText().substring(0,2));
    int mes2=Integer.parseInt(campoTextoFechaHasta.getText().substring(3,5));
    int año2=Integer.parseInt(campoTextoFechaHasta.getText().substring(6));
    Fecha fecha2=new Fecha(dia2,mes2,año2);
    periodo.setDesde(fecha1);
    periodo.setHasta(fecha2);
    }
    dispose();
            
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRestaurarActionPerformed
        // TODO add your handling code here:
        if(operacion == ConstantesGUI.AGREGAR) 
        {
            campoTextoFechaDesde.setText("");
            campoTextoFechaHasta.setText("");
        }
        // Si la operación es Actualizar
        if(operacion == ConstantesGUI.ACTUALIZAR) 
        {
            campoTextoFechaDesde.setText(periodo.getDesde().toString());
            campoTextoFechaHasta.setText(periodo.getHasta().toString());
        }
        dispose();
    }//GEN-LAST:event_botonRestaurarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonRestaurar;
    private javax.swing.JTextField campoTextoFechaDesde;
    private javax.swing.JTextField campoTextoFechaHasta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
    Periodo periodo; 
    int operacion; 
    StringBuffer respuesta; 
}
