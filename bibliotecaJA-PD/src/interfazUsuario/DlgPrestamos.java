 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;
import objetosNegocio.Libro;
import objetosNegocio.Prestamo;
import objetosNegocio.Publicacion;
import objetosNegocio.Usuario;
import java.awt.Dimension;
import java.awt.Point;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import objetosServicios.*;
/**
 *
 * @author jvale
 */
public class DlgPrestamos extends javax.swing.JDialog {

    /**
     * Creates new form DlgPrestamos
     */
    public DlgPrestamos(java.awt.Frame parent,String title, boolean modal, Prestamo prestamo, DefaultComboBoxModel catalogoLibros, DefaultComboBoxModel catalogoUsuarios, int operacion, StringBuffer respuesta) 
    {
        super(parent, modal);
        this.prestamo = prestamo;
        this.catalogoLibros = catalogoLibros;
        this.catalogoUsuarios=catalogoUsuarios;
        this.operacion = operacion;
        this.respuesta = respuesta;
        initComponents();
        
        // Modifica el título del botón botonAceptar y establece si los 
        // botones botonRestaurar y botonCancelar estarán habilitados. 
        // Si la operación es agregar 
        if (operacion == ConstantesGUI.AGREGAR) {
            botonAceptar.setText("Guardar");
        } // Si la operación es actualizar 
        else if (operacion == ConstantesGUI.ACTUALIZAR) {
            botonAceptar.setText("Actualizar");
        } // Si la operación es eliminar 
        else if (operacion == ConstantesGUI.ELIMINAR) {
            botonAceptar.setText("Eliminar");
            botonRestaurar.setEnabled(false);
        } // Si la operación es desplegar 
        else if (operacion == ConstantesGUI.DESPLEGAR) {
            botonAceptar.setText("Continuar");
            botonRestaurar.setEnabled(false);
            botonCancelar.setEnabled(false);
        }

        // Si la operación es de actualizar, eliminar o desplegar, 
        if ((operacion == ConstantesGUI.ELIMINAR) || (operacion == ConstantesGUI.ACTUALIZAR) || (operacion == ConstantesGUI.DESPLEGAR)) {
            // despliega el resto de los datos del prestamo
            cajaCombinadaLibros.setSelectedItem(prestamo.getPublicacion());
            cajaCombinadaUsuarios.setSelectedItem(prestamo.getUsuario());
            campoTextoTiempoPrestamo.setText(Integer.toString(prestamo.getTiempoPrestamo()));
            prestamo.getFechaPrestamo();
        }

        // Si la operación es de eliminar o desplegar 
        if ((operacion == ConstantesGUI.ELIMINAR) || (operacion == ConstantesGUI.DESPLEGAR)) {
            // hace los campos de texto de sólo lectura 
            cajaCombinadaLibros.setEnabled(false);
            cajaCombinadaUsuarios.setEnabled(false);
            campoTextoTiempoPrestamo.setEditable(false);
        }

        // Establece el valor por omisión para respuesta, por si se cierra el 
        // cuadro de diálogo presionando el botón cerrar o el botón cancelar 
        respuesta.append(ConstantesGUI.CANCELAR);
        // centra el cuadro de dialogo sobre la ventana de la aplicación 
        centraCuadroDialogo(parent);

        // Muestra el cuadro de diálogo 
        setVisible(true);
    }
    
    /**
     * Este método centra el cuadro de dialogo sobre la ventana de la
     * aplicación.
     *
     * @param parent Ventana sobre la que aparecerá el cuadro de diálogo
     */
    private void centraCuadroDialogo(java.awt.Frame parent) 
    {
        // Obtiene el tamaño y posición de la ventana de la aplicación 
        Dimension frameSize = parent.getSize();
        Point loc = parent.getLocation();
        // Obtiene el tamaño del cuadro de diálogo 
        Dimension dlgSize = getPreferredSize();

        // Centra el cuadro de diálogo sobre la ventana padre 
        setLocation((frameSize.width - dlgSize.width) / 2 + loc.x, (frameSize.height - dlgSize.height) / 2 + loc.y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cajaCombinadaUsuarios = new javax.swing.JComboBox<>();
        cajaCombinadaLibros = new javax.swing.JComboBox<>();
        campoTextoTiempoPrestamo = new javax.swing.JTextField();
        botonAceptar = new javax.swing.JButton();
        botonRestaurar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Lista de usuarios:");

        jLabel2.setText("Lista de libros:");

        jLabel3.setText("Tiempo de prestamo:");

        cajaCombinadaUsuarios.setModel(catalogoUsuarios);

        cajaCombinadaLibros.setModel(catalogoLibros);

        campoTextoTiempoPrestamo.setColumns(10);
        campoTextoTiempoPrestamo.setText("0");

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonRestaurar.setText("Restaurar");
        botonRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestaurarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cajaCombinadaUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cajaCombinadaLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoTextoTiempoPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 183, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonRestaurar)
                        .addGap(72, 72, 72)
                        .addComponent(botonCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cajaCombinadaUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cajaCombinadaLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoTextoTiempoPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonRestaurar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /**
        * Método oyente del botón botonAceptar
        *
        * @param evt Evento al que escucha
        */
    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        // TODO add your handling code here:
       
        
        // Si la operación es Agregar o Actualizar 
        if ((operacion == ConstantesGUI.AGREGAR) || (operacion == ConstantesGUI.ACTUALIZAR)) {
            // Toma los valores capturados en los campos de texto y en la caja 
            // combinada y almacénalos en el parámetro prestamo. 
            prestamo.setTiempoPrestamo(Integer.parseInt(campoTextoTiempoPrestamo.getText()));
            prestamo.setPublicacion((Publicacion) cajaCombinadaLibros.getSelectedItem());
            prestamo.setUsuario((Usuario)cajaCombinadaUsuarios.getSelectedItem());
            Fecha fecha1= new Fecha();
            prestamo.setFechaPrestamo(fecha1);
        }
        // Borra el contenido de respuesta 
        respuesta.delete(0, respuesta.length());
        // Establece que se presionó el botón botonAceptar 
        respuesta.append(ConstantesGUI.ACEPTAR);
        // Destruye el cuadro de díalogo 
        dispose();
                                                
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRestaurarActionPerformed
        // TODO add your handling code here:
        // Si la operación es Agregar 
        if (operacion == ConstantesGUI.AGREGAR) 
        {
            campoTextoTiempoPrestamo.setText("");
            cajaCombinadaLibros.setSelectedIndex(0);
            cajaCombinadaUsuarios.setSelectedItem(0);
        }

        // Si la operación es Actualizar 
        if (operacion == ConstantesGUI.ACTUALIZAR) 
        {
            campoTextoTiempoPrestamo.setText(Integer.toString(prestamo.getTiempoPrestamo()));
            cajaCombinadaLibros.setSelectedItem(prestamo.getPublicacion());
            cajaCombinadaUsuarios.setSelectedItem(prestamo.getUsuario());
        }
    }//GEN-LAST:event_botonRestaurarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonRestaurar;
    private javax.swing.JComboBox<String> cajaCombinadaLibros;
    private javax.swing.JComboBox<String> cajaCombinadaUsuarios;
    private javax.swing.JTextField campoTextoTiempoPrestamo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
    private Prestamo prestamo;
    private DefaultComboBoxModel catalogoLibros;
    private DefaultComboBoxModel catalogoUsuarios;
    private int operacion;
    private StringBuffer respuesta;
}
