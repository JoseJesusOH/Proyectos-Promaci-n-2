/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazUsuario;

import control.Tabla; 
import java.awt.Dimension; 
import java.awt.Toolkit;
import control.*;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/**
 * Esta clase es la principal de la bibliteca 
 * Es la ventana principal de la aplicaci√≥n
 * @author jvale
 */
public class RegistroDeBiblioteca extends javax.swing.JFrame {

    /**
     * Creates new form RegistroDeBiblioteca
     */
    public RegistroDeBiblioteca()
    {
       
        initComponents();
        centraVentana();
    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloTabla = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuBar = new javax.swing.JMenuBar();
        menuCatalogos = new javax.swing.JMenu();
        menuCatalogoLibros = new javax.swing.JMenu();
        opcionMenuAgregarLibro = new javax.swing.JMenuItem();
        opcionMenuActualizarLibro = new javax.swing.JMenuItem();
        opcionMenuEliminarLibro = new javax.swing.JMenuItem();
        menuCatalogoUsuarios = new javax.swing.JMenu();
        opcionMenuAgregarUsuario = new javax.swing.JMenuItem();
        opcionMenuActualizarUsuario = new javax.swing.JMenuItem();
        opcionMenuEliminarUsuario = new javax.swing.JMenuItem();
        Separador = new javax.swing.JPopupMenu.Separator();
        opcionMenuSalir = new javax.swing.JMenuItem();
        menuInventarios = new javax.swing.JMenu();
        menuInventarioLibros = new javax.swing.JMenu();
        opcionMenuInventariarLibro = new javax.swing.JMenuItem();
        opcionMenuDesinventariarLibro = new javax.swing.JMenuItem();
        menuPrestamos = new javax.swing.JMenu();
        menuPrestamosLibros = new javax.swing.JMenu();
        opcionMenuPrestarLibro = new javax.swing.JMenuItem();
        opcionMenuDevolverLibro = new javax.swing.JMenuItem();
        menuConsultas = new javax.swing.JMenu();
        menuConsultaLibros = new javax.swing.JMenu();
        opcionMenuConsultaLibros = new javax.swing.JMenuItem();
        opcionMenuConsultaLibrosAutor = new javax.swing.JMenuItem();
        opcionMenuConsultaLibrosClasificacion = new javax.swing.JMenuItem();
        opcionMenuConsultaLibrosEditorial = new javax.swing.JMenuItem();
        menuConsultaUsuarios = new javax.swing.JMenu();
        opcionMenuConsultaUsuarios = new javax.swing.JMenuItem();
        menuConsultaInventarioLibros = new javax.swing.JMenu();
        opcionMenuConsultarInventarioLibros = new javax.swing.JMenuItem();
        opcionMenuConsultaInvetarioLibrosPrestados = new javax.swing.JMenuItem();
        opcionMenuConsultaInventarioLibrosDisponibles = new javax.swing.JMenuItem();
        menuConsultaPrestamosLibros = new javax.swing.JMenu();
        opcionMenuConsultaPrestamosLibros = new javax.swing.JMenuItem();
        opcionMenuConsultaPrestamosUsuarios = new javax.swing.JMenuItem();
        opcionMenuConsultaPrestamosLibro = new javax.swing.JMenuItem();
        opcionMenuConsultaPrestamosLibrosPeriodo = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        opcionMenuAcercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de biblioteca");
        setPreferredSize(new java.awt.Dimension(800, 600));

        tituloTabla.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jScrollPane1.setBorder(null);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 200));

        menuCatalogos.setMnemonic('f');
        menuCatalogos.setText("Catalogos");

        menuCatalogoLibros.setText("Libros");

        opcionMenuAgregarLibro.setText("Agregar");
        opcionMenuAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAgregarLibroActionPerformed(evt);
            }
        });
        menuCatalogoLibros.add(opcionMenuAgregarLibro);

        opcionMenuActualizarLibro.setText("Actualizar");
        opcionMenuActualizarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuActualizarLibroActionPerformed(evt);
            }
        });
        menuCatalogoLibros.add(opcionMenuActualizarLibro);

        opcionMenuEliminarLibro.setText("Eliminar");
        opcionMenuEliminarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuEliminarLibroActionPerformed(evt);
            }
        });
        menuCatalogoLibros.add(opcionMenuEliminarLibro);

        menuCatalogos.add(menuCatalogoLibros);

        menuCatalogoUsuarios.setText("Usuarios");

        opcionMenuAgregarUsuario.setText("Agregar");
        opcionMenuAgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAgregarUsuarioActionPerformed(evt);
            }
        });
        menuCatalogoUsuarios.add(opcionMenuAgregarUsuario);

        opcionMenuActualizarUsuario.setText("Actualizar");
        opcionMenuActualizarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuActualizarUsuarioActionPerformed(evt);
            }
        });
        menuCatalogoUsuarios.add(opcionMenuActualizarUsuario);

        opcionMenuEliminarUsuario.setText("Eliminar");
        opcionMenuEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuEliminarUsuarioActionPerformed(evt);
            }
        });
        menuCatalogoUsuarios.add(opcionMenuEliminarUsuario);

        menuCatalogos.add(menuCatalogoUsuarios);
        menuCatalogos.add(Separador);

        opcionMenuSalir.setText("Salir");
        opcionMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuSalirActionPerformed(evt);
            }
        });
        menuCatalogos.add(opcionMenuSalir);

        menuBar.add(menuCatalogos);

        menuInventarios.setMnemonic('e');
        menuInventarios.setText("Inventarios");

        menuInventarioLibros.setText("Libros");

        opcionMenuInventariarLibro.setText("Inventariar");
        opcionMenuInventariarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuInventariarLibroActionPerformed(evt);
            }
        });
        menuInventarioLibros.add(opcionMenuInventariarLibro);

        opcionMenuDesinventariarLibro.setText("Desinventariar");
        opcionMenuDesinventariarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuDesinventariarLibroActionPerformed(evt);
            }
        });
        menuInventarioLibros.add(opcionMenuDesinventariarLibro);

        menuInventarios.add(menuInventarioLibros);

        menuBar.add(menuInventarios);

        menuPrestamos.setMnemonic('h');
        menuPrestamos.setText("Prestamos");

        menuPrestamosLibros.setText("Libros");

        opcionMenuPrestarLibro.setText("Prestar");
        opcionMenuPrestarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuPrestarLibroActionPerformed(evt);
            }
        });
        menuPrestamosLibros.add(opcionMenuPrestarLibro);

        opcionMenuDevolverLibro.setText("Devolver");
        opcionMenuDevolverLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuDevolverLibroActionPerformed(evt);
            }
        });
        menuPrestamosLibros.add(opcionMenuDevolverLibro);

        menuPrestamos.add(menuPrestamosLibros);

        menuBar.add(menuPrestamos);

        menuConsultas.setText("Consultas");

        menuConsultaLibros.setText("Libros");

        opcionMenuConsultaLibros.setText("Todos");
        opcionMenuConsultaLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaLibrosActionPerformed(evt);
            }
        });
        menuConsultaLibros.add(opcionMenuConsultaLibros);

        opcionMenuConsultaLibrosAutor.setText("Por autor");
        opcionMenuConsultaLibrosAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaLibrosAutorActionPerformed(evt);
            }
        });
        menuConsultaLibros.add(opcionMenuConsultaLibrosAutor);

        opcionMenuConsultaLibrosClasificacion.setText("Por clasificacion");
        opcionMenuConsultaLibrosClasificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaLibrosClasificacionActionPerformed(evt);
            }
        });
        menuConsultaLibros.add(opcionMenuConsultaLibrosClasificacion);

        opcionMenuConsultaLibrosEditorial.setText("Por editorial");
        opcionMenuConsultaLibrosEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaLibrosEditorialActionPerformed(evt);
            }
        });
        menuConsultaLibros.add(opcionMenuConsultaLibrosEditorial);

        menuConsultas.add(menuConsultaLibros);

        menuConsultaUsuarios.setText("Usuarios");

        opcionMenuConsultaUsuarios.setText("Todos");
        opcionMenuConsultaUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaUsuariosActionPerformed(evt);
            }
        });
        menuConsultaUsuarios.add(opcionMenuConsultaUsuarios);

        menuConsultas.add(menuConsultaUsuarios);

        menuConsultaInventarioLibros.setText("Inventario Libros");

        opcionMenuConsultarInventarioLibros.setText("Todos");
        opcionMenuConsultarInventarioLibros.setToolTipText("");
        opcionMenuConsultarInventarioLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultarInventarioLibrosActionPerformed(evt);
            }
        });
        menuConsultaInventarioLibros.add(opcionMenuConsultarInventarioLibros);

        opcionMenuConsultaInvetarioLibrosPrestados.setText("Prestados");
        opcionMenuConsultaInvetarioLibrosPrestados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaInvetarioLibrosPrestadosActionPerformed(evt);
            }
        });
        menuConsultaInventarioLibros.add(opcionMenuConsultaInvetarioLibrosPrestados);

        opcionMenuConsultaInventarioLibrosDisponibles.setText("Disponibles");
        opcionMenuConsultaInventarioLibrosDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaInventarioLibrosDisponiblesActionPerformed(evt);
            }
        });
        menuConsultaInventarioLibros.add(opcionMenuConsultaInventarioLibrosDisponibles);

        menuConsultas.add(menuConsultaInventarioLibros);

        menuConsultaPrestamosLibros.setText("Prestamos Libros");

        opcionMenuConsultaPrestamosLibros.setText("Todos");
        opcionMenuConsultaPrestamosLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaPrestamosLibrosActionPerformed(evt);
            }
        });
        menuConsultaPrestamosLibros.add(opcionMenuConsultaPrestamosLibros);

        opcionMenuConsultaPrestamosUsuarios.setText("Por usuario");
        opcionMenuConsultaPrestamosUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaPrestamosUsuariosActionPerformed(evt);
            }
        });
        menuConsultaPrestamosLibros.add(opcionMenuConsultaPrestamosUsuarios);

        opcionMenuConsultaPrestamosLibro.setText("Por libro");
        opcionMenuConsultaPrestamosLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaPrestamosLibroActionPerformed(evt);
            }
        });
        menuConsultaPrestamosLibros.add(opcionMenuConsultaPrestamosLibro);

        opcionMenuConsultaPrestamosLibrosPeriodo.setText("Por periodo");
        opcionMenuConsultaPrestamosLibrosPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuConsultaPrestamosLibrosPeriodoActionPerformed(evt);
            }
        });
        menuConsultaPrestamosLibros.add(opcionMenuConsultaPrestamosLibrosPeriodo);

        menuConsultas.add(menuConsultaPrestamosLibros);

        menuBar.add(menuConsultas);

        menuAyuda.setText("Ayuda");

        opcionMenuAcercaDe.setText("Acerca de");
        opcionMenuAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMenuAcercaDeActionPerformed(evt);
            }
        });
        menuAyuda.add(opcionMenuAcercaDe);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tituloTabla)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2400, Short.MAX_VALUE))
                .addContainerGap(490, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloTabla)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2000, Short.MAX_VALUE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Metodo oyente que consulta el catalogo de libros
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaLibrosActionPerformed
        Tabla tablaLibros = control.getTablaLibros(this);
        // Despliega la lista de libros por autor
        if (tablaLibros != null)
        {
         tablaLibros.setTitulo("Lista de todos los libros");
         despliegaTabla(control.getTablaLibros(this));
        TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        } 
    }//GEN-LAST:event_opcionMenuConsultaLibrosActionPerformed
/**
 * Metodo oyente que agrega un libro al catalogo de libros
 * @param evt evento al que escucha.
 */
    private void opcionMenuAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAgregarLibroActionPerformed
         // Agrega el libro
         if (control.agregarLibro(this)) 
         {
            // Obtiene la lista de libros
            Tabla tablaLibros = control.getTablaLibros(this);
            // Despliega la lista de canciones
             despliegaTabla(tablaLibros);
        TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
         }
    }//GEN-LAST:event_opcionMenuAgregarLibroActionPerformed
/**
 * Metodo oyente que actualiza un libro del catalogo de libros
 * @param evt evento al que escucha
 */
    private void opcionMenuActualizarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuActualizarLibroActionPerformed
            // Actualiza el libro
            if (control.actualizarLibro(this)) 
            {
            // Obtiene la lista de libros
            Tabla tablaLibros = control.getTablaLibros(this);
            // Despliega la lista de libros
            despliegaTabla(tablaLibros);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
            }  
    }//GEN-LAST:event_opcionMenuActualizarLibroActionPerformed
/**
 * Metodo oyente que elimina un libro del catalogo de libros
 * @param evt evento al que escucha
 */
    private void opcionMenuEliminarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuEliminarLibroActionPerformed
        //Elimina el libro
        if (control.eliminarLibro(this)) 
        {
            // Obtiene la lista de libros
            Tabla tablaLibros = control.getTablaLibros(this);
            // Despliega la lista de libros
            despliegaTabla(tablaLibros); 
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuEliminarLibroActionPerformed
/**
 * Metodo oyente que agrega un usuario al catalogo de usuarios.
 * @param evt evento al que escucha.
 */
    private void opcionMenuAgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAgregarUsuarioActionPerformed
        // Agrega el nuevo usuario
        if (control.agregarUsuario(this)) 
        {
            // Obtiene la lista de usuarios
            Tabla tablaUsuarios = control.getTablaUsuarios(this);
            // Despliega la lista de usuarios
            despliegaTabla(tablaUsuarios);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuAgregarUsuarioActionPerformed
/**
 * Metodo oyente que actualiza un usuario del catalogo de usuarios.
 * @param evt evento al que escucha.
 */
    private void opcionMenuActualizarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuActualizarUsuarioActionPerformed
        // TODO add your handling code here:
        // Actualiza el usuario
        if (control.actualizarUsuario(this)) 
        {
            // Obtiene la lista de usuarios
            Tabla tablaUsuarios = control.getTablaUsuarios(this);
            // Despliega la lista de usuarios
            despliegaTabla(tablaUsuarios);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuActualizarUsuarioActionPerformed
/**
 * Metodo oyente que elimina un usuario del catalogo de usuario
 * @param evt evento al que escucha
 */
    private void opcionMenuEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuEliminarUsuarioActionPerformed
        if (control.eliminarUsuario(this))
        {
            // Obtiene la lista de usuarios
            Tabla tablaUsuarios = control.getTablaUsuarios(this);
            // Despliega la lista de usuarios
              despliegaTabla(tablaUsuarios); 
              TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuEliminarUsuarioActionPerformed
/**
 * Metodo oyente que inventar√≠a un libro en el catalogo de inventario
 * @param evt evento al que escucha
 */
    private void opcionMenuInventariarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuInventariarLibroActionPerformed
        if(control.inventariarLibro(this))
        {
            Tabla tablaInventario=control.getTablaInventariaLibros(this);
            despliegaTabla(tablaInventario);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(400);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuInventariarLibroActionPerformed
/**
 * Metodo oyente que desinventaria un libro del catalogo de inventario
 * @param evt evento al que escucha
 */
    private void opcionMenuDesinventariarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuDesinventariarLibroActionPerformed
        if(control.desinventariarLibros(this))
        {
            Tabla tablaInventario=control.getTablaInventariaLibros(this);
            despliegaTabla(tablaInventario);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(400);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuDesinventariarLibroActionPerformed
/**
 * Metodo oyente que presta un libro del inventario de libros
 * @param evt evento al que escucha.
 */
    private void opcionMenuPrestarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuPrestarLibroActionPerformed
        if (control.prestarLibro(this))
        { 
            // Obtiene la lista de canciones 
            Tabla tablaLibros = control.getTablaPrestamos(this); 
            // Despliega la lista de canciones 
            despliegaTabla(tablaLibros); 
             TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuPrestarLibroActionPerformed
/**
 * Metodo oyente que devuelve un libro al inventario de libros
 * @param evt evento al que escucha.
 */
    private void opcionMenuDevolverLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuDevolverLibroActionPerformed
         // TODO add your handling code here:
        if (control.devolverLibro(this))
        { 
            JOptionPane.showMessageDialog(this,"Libro devuelto");
            Tabla tablaInventario=control.getTablaInventariaLibros(this);
            despliegaTabla(tablaInventario);
             TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuDevolverLibroActionPerformed
/**
 * Metodo oyente que consulta los libros de un mismo autor
 * @param evt evento al que escucha.
 */
    private void opcionMenuConsultaLibrosAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaLibrosAutorActionPerformed
        // TODO add your handling code here:
        Tabla tablaLibros = control.getTablaLibros(this);
        // Despliega la lista de libros por autor
        if (tablaLibros != null)
        {
         tablaLibros.setTitulo("Lista de todos los libros por autor");
         despliegaTabla(control.getTablaLibrosAutor(this));
         TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        } 
    }//GEN-LAST:event_opcionMenuConsultaLibrosAutorActionPerformed
/**
 * Metodo oyente que consulta los libros de la misma clasificacion
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaLibrosClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaLibrosClasificacionActionPerformed
        Tabla tablaLibros = control.getTablaLibros(this);
        // Despliega la lista de libros por clasificacion
        if (tablaLibros != null) 
        {
            tablaLibros.setTitulo("Lista de todos los libros por clasificacion");
            despliegaTabla(control.getTablaLibrosClasificacion(this));
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        } 
    }//GEN-LAST:event_opcionMenuConsultaLibrosClasificacionActionPerformed
/**
 * Metodo oyente que consulta los libros de una misma editorial
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaLibrosEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaLibrosEditorialActionPerformed
        Tabla tablaLibros = control.getTablaLibros(this);
        // Despliega la lista de libros por editorial
        if (tablaLibros != null)
        {
            tablaLibros.setTitulo("Lista de todos los libros por editorial");
            despliegaTabla(control.getTablaLibrosEditorial(this));
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        } 
    }//GEN-LAST:event_opcionMenuConsultaLibrosEditorialActionPerformed
/**
 * Metodo oyente que consulta el inventario de libros
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultarInventarioLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultarInventarioLibrosActionPerformed
        Tabla tablaInventario=control.getTablaInventariaLibros(this);
        if(tablaInventario!=null)
        {
            tablaInventario.setTitulo("Inventario");
            despliegaTabla(tablaInventario);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(400);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuConsultarInventarioLibrosActionPerformed
/**
 * Metodo oyente que consulta el inventario de los libros prestados
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaInvetarioLibrosPrestadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaInvetarioLibrosPrestadosActionPerformed
        Tabla tablaInventarioPrestados=control.getTablaLibrosPrestados(this);
        if(tablaInventarioPrestados!=null)
        {
            tablaInventarioPrestados.setTitulo("Tabla de libros prestados");
            despliegaTabla(tablaInventarioPrestados);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(400);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuConsultaInvetarioLibrosPrestadosActionPerformed
/**
 * Metodo oyente que consulta el inventario de los libros disponibles
 * @param evt evento al que escucha.
 */
    private void opcionMenuConsultaInventarioLibrosDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaInventarioLibrosDisponiblesActionPerformed
        // TODO add your handling code here:
        Tabla tablaInventarioDisponibles=control.getTablaLibrosDisponibles(this);
        if(tablaInventarioDisponibles!=null)
        {
            tablaInventarioDisponibles.setTitulo("Tabla de libros disponibles");
            despliegaTabla(tablaInventarioDisponibles);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(400);
        columnModel.getColumn(1).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuConsultaInventarioLibrosDisponiblesActionPerformed
/**
 * Metodo oyente que consulta la lista de los prestamos
 * @param evt evento al que escucha.
 */
    private void opcionMenuConsultaPrestamosLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaPrestamosLibrosActionPerformed
 
            // Obtiene la lista de prestamos
            Tabla tablaLibros = control.getTablaPrestamos(this); 
            // Despliega la lista de prestamos 
            despliegaTabla(tablaLibros); 
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        
    }//GEN-LAST:event_opcionMenuConsultaPrestamosLibrosActionPerformed
/**
 * Metodo oyente que consulta la lista de prestamos por usuario
 * @param evt evento al que escucha.
 */
    private void opcionMenuConsultaPrestamosUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaPrestamosUsuariosActionPerformed
        Tabla tablaPrestamosUsuarios=control.getTablaPrestamosUsuarios(this);
        if(tablaPrestamosUsuarios!=null)
        {
            tablaPrestamosUsuarios.setTitulo("Tabla de prestamos por usuarios");
            despliegaTabla(tablaPrestamosUsuarios);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuConsultaPrestamosUsuariosActionPerformed
/**
 * Metodo oyente que consulta la lista de prestamos por libro
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaPrestamosLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaPrestamosLibroActionPerformed
        Tabla tablaPrestamosLibro=control.getTablaPrestamosLibrosLibro(this);
        if(tablaPrestamosLibro!=null)
        {
            tablaPrestamosLibro.setTitulo("Tabla de prestamos por libro");
            despliegaTabla(tablaPrestamosLibro);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        }
    }//GEN-LAST:event_opcionMenuConsultaPrestamosLibroActionPerformed
/**
 * Metodo oyente que consulta la lista de prestamos dentro de un periodo
 * @param evt evento al que escucha
 */
    private void opcionMenuConsultaPrestamosLibrosPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaPrestamosLibrosPeriodoActionPerformed
        Tabla tablaPrestamosPeriodo=control.getTablaPrestamosLibrosPeriodo(this);
        if(tablaPrestamosPeriodo!=null)
        {
            tablaPrestamosPeriodo.setTitulo("Prestamos dentro de un periodo");
            despliegaTabla(tablaPrestamosPeriodo);
            TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(250);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        }
        
    }//GEN-LAST:event_opcionMenuConsultaPrestamosLibrosPeriodoActionPerformed
/**
 * Metodo oyente que finaliza el programa.
 * @param evt evento al que escucha. 
 */
    private void opcionMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_opcionMenuSalirActionPerformed
/**
 * Metodo oyente que consulta la lista de usuarios.
 * @param evt evento al que escucha.
 */
    private void opcionMenuConsultaUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuConsultaUsuariosActionPerformed
        Tabla tablaUsuarios = control.getTablaUsuarios(this);
        // Despliega la lista de libros por autor
        if (tablaUsuarios != null)
        {
         tablaUsuarios.setTitulo("Lista de todos los usuarios");
         despliegaTabla(tablaUsuarios);
         TableColumnModel columnModel= jtabla.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(3).setPreferredWidth(100);
        columnModel.getColumn(4).setPreferredWidth(100);
        }  
    }//GEN-LAST:event_opcionMenuConsultaUsuariosActionPerformed

    private void opcionMenuAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMenuAcercaDeActionPerformed
        control.acercaDE(this);
    }//GEN-LAST:event_opcionMenuAcercaDeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroDeBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroDeBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroDeBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroDeBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroDeBiblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator Separador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuCatalogoLibros;
    private javax.swing.JMenu menuCatalogoUsuarios;
    private javax.swing.JMenu menuCatalogos;
    private javax.swing.JMenu menuConsultaInventarioLibros;
    private javax.swing.JMenu menuConsultaLibros;
    private javax.swing.JMenu menuConsultaPrestamosLibros;
    private javax.swing.JMenu menuConsultaUsuarios;
    private javax.swing.JMenu menuConsultas;
    private javax.swing.JMenu menuInventarioLibros;
    private javax.swing.JMenu menuInventarios;
    private javax.swing.JMenu menuPrestamos;
    private javax.swing.JMenu menuPrestamosLibros;
    private javax.swing.JMenuItem opcionMenuAcercaDe;
    private javax.swing.JMenuItem opcionMenuActualizarLibro;
    private javax.swing.JMenuItem opcionMenuActualizarUsuario;
    private javax.swing.JMenuItem opcionMenuAgregarLibro;
    private javax.swing.JMenuItem opcionMenuAgregarUsuario;
    private javax.swing.JMenuItem opcionMenuConsultaInventarioLibrosDisponibles;
    private javax.swing.JMenuItem opcionMenuConsultaInvetarioLibrosPrestados;
    private javax.swing.JMenuItem opcionMenuConsultaLibros;
    private javax.swing.JMenuItem opcionMenuConsultaLibrosAutor;
    private javax.swing.JMenuItem opcionMenuConsultaLibrosClasificacion;
    private javax.swing.JMenuItem opcionMenuConsultaLibrosEditorial;
    private javax.swing.JMenuItem opcionMenuConsultaPrestamosLibro;
    private javax.swing.JMenuItem opcionMenuConsultaPrestamosLibros;
    private javax.swing.JMenuItem opcionMenuConsultaPrestamosLibrosPeriodo;
    private javax.swing.JMenuItem opcionMenuConsultaPrestamosUsuarios;
    private javax.swing.JMenuItem opcionMenuConsultaUsuarios;
    private javax.swing.JMenuItem opcionMenuConsultarInventarioLibros;
    private javax.swing.JMenuItem opcionMenuDesinventariarLibro;
    private javax.swing.JMenuItem opcionMenuDevolverLibro;
    private javax.swing.JMenuItem opcionMenuEliminarLibro;
    private javax.swing.JMenuItem opcionMenuEliminarUsuario;
    private javax.swing.JMenuItem opcionMenuInventariarLibro;
    private javax.swing.JMenuItem opcionMenuPrestarLibro;
    private javax.swing.JMenuItem opcionMenuSalir;
    private javax.swing.JLabel tituloTabla;
    // End of variables declaration//GEN-END:variables
    Control control = new Control();
    private javax.swing.JTable jtabla; 
        /** 
      * Este m√©todo centra la ventana de la aplicaci√≥n sobre la pantalla 
      */ 
      private void centraVentana() { 
      //Obtiene el tama√±o de la pantalla 
      Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize(); 

      // Obtiene el tama√±o de la ventana de la aplicaci√≥n 
      Dimension frameSize = getSize(); 

      // Se asegura que el tama√±o de la ventana de la aplicaci√≥n 
      // no exceda el tama√±o de la pantalla 
      if (frameSize.height > screenSize.height) { 
      frameSize.height = screenSize.height; 
      } 
      if (frameSize.width > screenSize.width) { 
      frameSize.width = screenSize.width; 
      } 

      // Centra la ventana de la aplicaci√≥n sobre la pantalla 
      setLocation((screenSize.width - frameSize.width) / 2, 
      (screenSize.height - frameSize.height) / 2); 
      } 
      /** 
 * Este m√©todo crea un objeto del tipo JTable dentro de un panel con 
 * barras de deslizamiento y la despliega 
 *
 * @param tabla objeto TableModel con los datos de una tabla 
 */ 
        public void despliegaTabla(Tabla tabla) { 
        // Crea la tabla a partir del modelo de la tabla con los valores 
        // de los titulos de las columnas y los valores de las celdas 
        jtabla = new javax.swing.JTable(tabla.getModeloTabla()); 
        // Establece el t√≠tulo de la tabla 
        tituloTabla.setText(tabla.getTitulo()); 
        // Hace que el control del tama√±o de la tabla y la porci√≥n visible 
        // lo tenga la barra de deslizamiento y no la tabla 
        jtabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        jtabla.setAutoscrolls(false); 
        // Hace visible la tabla dentro del panel con barras de 
        // deslizamiento 
        jScrollPane1.setViewportView(jtabla); 
      } 


}
